streamlit
matplotlib
numpy
# ðŸŽ¨ Generative Abstract Poster Practice Week2ï¼ˆHe Pengweiï¼‰
# Web Interactive Version using Streamlit

import streamlit as st
import random
import numpy as np
import matplotlib.pyplot as plt

# -----------------------------
# Blob generation
# -----------------------------
def blob(center=(0, 0), radius=1.5, wobble=0.2, points=150):
    angles = np.linspace(0, 2 * np.pi, points)
    radii = radius * (1 + wobble * (np.random.rand(points) - 0.5) * 2)
    x = center[0] + radii * np.cos(angles)
    y = center[1] + radii * np.sin(angles)
    return x, y

def random_palette(k=6):
    return [(random.random(), random.random(), random.random()) for _ in range(k)]

# -----------------------------
# Main poster drawing
# -----------------------------
def draw_poster(n_blobs, blob_radius_range, wobble_range, alpha_range, seed):
    random.seed(seed)
    np.random.seed(seed)

    plt.figure(figsize=(7, 10))
    ax = plt.gca()
    ax.axis('off')
    ax.set_facecolor((0.98, 0.98, 0.97))

    colors = random_palette(k=n_blobs)

    for i in range(n_blobs):
        cx, cy = random.uniform(-1, 2), random.uniform(-1, 2)
        radius = random.uniform(*blob_radius_range)
        wobble = random.uniform(*wobble_range)
        x, y = blob(center=(cx, cy), radius=radius, wobble=wobble)
        ax.fill(
            x, y,
            color=random.choice(colors),
            alpha=random.uniform(*alpha_range),
            edgecolor=(0, 0, 0, 0)
        )

    plt.text(
        0.05, 0.95, "Generative Poster",
        fontsize=16, weight='bold', transform=ax.transAxes
    )
    plt.text(
        0.05, 0.91, "Week 2 â€¢ Arts & Advanced Big Data",
        fontsize=10, transform=ax.transAxes
    )
    plt.xlim(-1, 2)
    plt.ylim(-1, 2)
    st.pyplot(plt.gcf())

# -----------------------------
# Streamlit UI
# -----------------------------
st.title("ðŸŽ¨ Generative Abstract Poster Practice Week2ï¼ˆHe Pengweiï¼‰")
st.markdown("Explore randomness, shapes, and palettes interactively!")

# Sidebar controls
st.sidebar.header("ðŸ§© Settings")

seed = st.sidebar.number_input("Random Seed", min_value=0, max_value=9999, value=0, step=1)
n_blobs = st.sidebar.slider("Number of Blobs", 3, 20, 8)
blob_radius_range = st.sidebar.slider("Blob Size Range", 0.1, 0.8, (0.2, 0.6))
wobble_range = st.sidebar.slider("Wobble Range", 0.01, 0.5, (0.05, 0.25))
alpha_range = st.sidebar.slider("Transparency Range", 0.1, 1.0, (0.3, 0.6))

# Button to re-generate
if st.sidebar.button("ðŸŽ² Generate Poster"):
    draw_poster(n_blobs, blob_radius_range, wobble_range, alpha_range, seed)
else:
    draw_poster(n_blobs, blob_radius_range, wobble_range, alpha_range, seed)
